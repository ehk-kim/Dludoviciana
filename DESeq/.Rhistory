library(DESeq2)
library(pheatmap)
library(ggplot2)
library(dplyr)
createDESeq <- function(countsFile, colsFile) {
counts <- read.delim(countsFile, row.name="gene_id")
cols <- read.delim(colsFile, row.names=1)
ddsObj <- DESeqDataSetFromMatrix(countData=counts, colData=cols, design=~condition)
ddsObj <- DESeq(ddsObj)
res <- results(ddsObj, alpha = 0.05, lfcThreshold = 2, contrast = c("condition", "gametophyte", "sporophyte"))
res
return(ddsObj)
}
resLFC <- function(ddsObj) {
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05,
contrast = c("condition", "gametophyte", "sporophyte"))
res_LFC <- lfcShrink(ddsObj, type = "ashr", res=res_GA,
contrast = c("condition", "gametophyte", "sporophyte"))
summary(res_LFC)
return(res_LFC)
}
gametoUpreg <- function(lfc_df) {
ddsRes <-subset(lfc_df, padj < 0.05)
ddsRes1 <- as.data.frame(ddsRes)
vec <- ddsRes1 %>% filter(log2FoldChange >= 2)
vec1 <- rownames(vec)
return(vec1)
}
gametoDownreg <- function(lfc_df) {
ddsRes <-subset(lfc_df, padj < 0.05)
ddsRes1 <- as.data.frame(ddsRes)
vec <- ddsRes1 %>% filter(log2FoldChange <= -2)
vec1 <- rownames(vec)
return(vec1)
}
makeHeatmap <- function(ddsObj) {
ntd <- normTransform(ddsObj)
select <- order(rowMeans(counts(ddsObj)), decreasing = TRUE) [1:50]
df <- as.data.frame(colData(ddsObj) [,c("species", "condition")])
phm <- assay(ntd)
pheatmap(phm[select,], cutree_cols = 2, annotation_col=df, cluster_rows = TRUE)
}
makeHeatmap2 <- function(ddsObj) {
vsd<-varianceStabilizingTransformation(ddsObj)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(vsd$treatment)
colnames(sampleDistMatrix) <- paste(vsd$condition)
ph <- pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists)
#ph <-  ph + scale_fill_continuous(limits = c(0,700), type="viridis")
ph
}
dlud_dds <- readRDS("dlud_dds.rds")
test <- results(dlud_dds)
View(dlud_dds)
test <- results(dlud_dds, lfcThreshold=0, altHypothesis="greaterAbs", alpha = 1,
contrast = c("condition", "gametophyte", "sporophyte"))
test <- results(dlud_dds, lfcThreshold=0, altHypothesis="greaterAbs", alpha = 0.99999999999999999,
contrast = c("condition", "gametophyte", "sporophyte"))
test <- results(dlud_dds, lfcThreshold=0, alpha = 0.99999999999999999,
contrast = c("condition", "gametophyte", "sporophyte"))
test <- results(dlud_dds)
View(test)
test2 <- as.data.frame(test)
View(test2)
write.csv(test2, "dlud_all_genes.csv")
read.csv("dlud_HOX", hox)
read.csv("dlud_HOX.txt", hox)
hox <- read.csv("dlud_HOX.txt")
View(test2)
View(test2)
View(test)
View(hox)
hox <- read.csv("dlud_HOX.txt", header = FALSE)
test3 <- subset(test2, row.names(test2) %in% hox$V1)
View(test3)
library(tibble)
test2 <- tibble::rownames_to_column(test2, "gene_names")
View(test2)
test3 <- subset(test2, test2 %in% hox$V1)
test3 <- subset(test2, gene_names %in% hox$V1)
View(test3)
test3 <- test2 %>% filter(gene_names %in% hox$V1)
View(test3)
View(test2)
View(hox)
hox <- read.csv("dlud_HOX.txt")
test3 <- test2 %>% filter(gene_names %in% hox$V1)
View(hox)
hox <- read.csv("dlud_HOX.txt", header = FALSE)
test3 <- test2 %>% filter(gene_names %in% hox$V1)
View(test3)
write.csv(test3, "hox_deseq_dlud_overlap.csv", quote = FALSE)
