library(DESeq2)
install.packages("BiocManager")
library(BiocManager)
BiocManager::install(DESeq2)
BiocManager::install("DESeq2")
library(DESeq2)
library(DESeq2)
BiocManager::install("DESeq2")
library(DESeq2)
BiocManager::install("GenomeInfoDb")
BiocManager::install("GenomeInfoDb")
library(DESeq2)
createDESeq <- function(countsFile, colsFile) {
counts <- read.delim(countsFile, row.name="gene_id")
cols <- read.delim(colsFile, row.names=1)
ddsObj <- DESeqDataSetFromMatrix(countData=counts, colData=cols, design=~condition)
# ddsObj$condition <- relevel(ddsObj$condition, ref="gametophyte")
ddsObj <- DESeq(ddsObj)
# smallestGroupSize <- 2
# keep <- rowSums(counts(ddsObj) >= 10) >= smallestGroupSize
# ddsObj <- ddsObj[keep,]
return(ddsObj)
}
ppat_dds <- createDESeq("ppat_counts.txt", "ppat_sample_info.txt")
BiocManager::install("GenomeInfoDb", force = TRUE)
library(DESeq2)
ppat_dds <- createDESeq("ppat_counts.txt", "ppat_sample_info.txt")
res <- results(ppat_dds, alpha = 0.05, lfcThreshold = 2)
res
res <- results(ppat_dds, alpha = 0.05, lfcThreshold = 2, contrast = ("condition", "gametophyte", "sporophyte"))
res <- results(ppat_dds, alpha = 0.05, lfcThreshold = 2, contrast = c("condition", "gametophyte", "sporophyte"))
res
createDESeq <- function(countsFile, colsFile) {
counts <- read.delim(countsFile, row.name="gene_id")
cols <- read.delim(colsFile, row.names=1)
ddsObj <- DESeqDataSetFromMatrix(countData=counts, colData=cols, design=~condition)
# ddsObj$condition <- relevel(ddsObj$condition, ref="gametophyte")
ddsObj <- DESeq(ddsObj)
res <- results(ddsObj, alpha = 0.05, lfcThreshold = 2, contrast = c("condition", "gametophyte", "sporophyte"))
# smallestGroupSize <- 2
# keep <- rowSums(counts(ddsObj) >= 10) >= smallestGroupSize
# ddsObj <- ddsObj[keep,]
res
return(res, ddsObj)
}
ppat_dds <- createDESeq("ppat_counts.txt", "ppat_sample_info.txt")
createDESeq <- function(countsFile, colsFile) {
counts <- read.delim(countsFile, row.name="gene_id")
cols <- read.delim(colsFile, row.names=1)
ddsObj <- DESeqDataSetFromMatrix(countData=counts, colData=cols, design=~condition)
# ddsObj$condition <- relevel(ddsObj$condition, ref="gametophyte")
ddsObj <- DESeq(ddsObj)
res <- results(ddsObj, alpha = 0.05, lfcThreshold = 2, contrast = c("condition", "gametophyte", "sporophyte"))
# smallestGroupSize <- 2
# keep <- rowSums(counts(ddsObj) >= 10) >= smallestGroupSize
# ddsObj <- ddsObj[keep,]
res
return(ddsObj)
}
ppat_dds <- createDESeq("ppat_counts.txt", "ppat_sample_info.txt")
resLFC <- function(ddsObj) {
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
res_LFC <- lfcShrink(ddsObj, coef="condition_gametophyte_vs_sporophyte", type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
#res_LFC <- lfcShrink(ddsObj, coef="condition_gametophyte_vs_sporophyte", type="apeglm", res=res_GA)
res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
BiocManager::install("apeglm")
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, coef="condition_gametophyte_vs_sporophyte", type="apeglm", res=res_GA)
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, coef="condition_sporophyte_vs_gametophyte", type="apeglm", res=res_GA)
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
ddsObj$condition <- factor(ddsObj$condition, levels = c("gametophyte","sporophyte"))
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, coef="condition_gametophyte_vs_sporophyte", type="apeglm", res=res_GA)
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
View(ppat_dds)
View(ppat_LFC)
resLFC <- function(ddsObj) {
#ddsObj$condition <- factor(ddsObj$condition, levels = c("gametophyte","sporophyte"))
ddsObj$condition <- relevel(ddsObj$condition, ref = "sporophyte")
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, coef="condition_gametophyte_vs_sporophyte", type="apeglm", res=res_GA)
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
#ddsObj$condition <- factor(ddsObj$condition, levels = c("gametophyte","sporophyte"))
#ddsObj$condition <- relevel(ddsObj$condition, ref = "sporophyte")
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, res=res_GA)
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
#ddsObj$condition <- factor(ddsObj$condition, levels = c("gametophyte","sporophyte"))
#ddsObj$condition <- relevel(ddsObj$condition, ref = "sporophyte")
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, type = "normal", res=res_GA)
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
#ddsObj$condition <- factor(ddsObj$condition, levels = c("gametophyte","sporophyte"))
#ddsObj$condition <- relevel(ddsObj$condition, ref = "sporophyte")
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, type = "normal", res=res_GA, contrast = c("condition", "gametophyte", "sporophyte"))
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
#ddsObj$condition <- factor(ddsObj$condition, levels = c("gametophyte","sporophyte"))
#ddsObj$condition <- relevel(ddsObj$condition, ref = "sporophyte")
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, type = "ashr", res=res_GA, contrast = c("condition", "gametophyte", "sporophyte"))
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
install.packages("ashr")
library(ashr)
resLFC <- function(ddsObj) {
#ddsObj$condition <- factor(ddsObj$condition, levels = c("gametophyte","sporophyte"))
#ddsObj$condition <- relevel(ddsObj$condition, ref = "sporophyte")
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, type = "ashr", res=res_GA, contrast = c("condition", "gametophyte", "sporophyte"))
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
#ddsObj$condition <- factor(ddsObj$condition, levels = c("gametophyte","sporophyte"))
#ddsObj$condition <- relevel(ddsObj$condition, ref = "sporophyte")
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, type = "normal", res=res_GA, contrast = c("condition", "gametophyte", "sporophyte"))
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
resLFC <- function(ddsObj) {
#ddsObj$condition <- factor(ddsObj$condition, levels = c("gametophyte","sporophyte"))
#ddsObj$condition <- relevel(ddsObj$condition, ref = "sporophyte")
res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05, contrast = c("condition", "gametophyte", "sporophyte"))
#res_GA <- results(ddsObj, lfcThreshold=2, altHypothesis="greaterAbs", alpha = 0.05)
res_LFC <- lfcShrink(ddsObj, type = "ashr", res=res_GA, contrast = c("condition", "gametophyte", "sporophyte"))
#res_LFC <- lfcShrink(ddsObj, type="apeglm", res=res_GA)
summary(res_LFC)
return(res_LFC)
}
ppat_LFC <- resLFC(ppat_dds)
gametoUpreg <- function(ddsRes) {
vec <- c()
for (i in  1:length(ddsRes$log2FoldChange)) {
if (ddsRes$log2FoldChange[i] >= 2 & is.na(ddsRes$log2FoldChange[i])==FALSE & is.na(ddsRes$padj[i])==FALSE & ddsRes$padj[i] < 0.05) {
vec <- append(vec, names(ddsRes$log2FoldChange[i]))
}
}
return(vec)
}
gametoDownreg <- function(ddsRes) {
vec <- c()
for (i in  1:length(ddsRes$log2FoldChange)) {
if (ddsRes$log2FoldChange[i] <= -2 & is.na(ddsRes$log2FoldChange[i])==FALSE & is.na(ddsRes$padj[i])==FALSE & ddsRes$padj[i] < 0.05) {
vec <- append(vec, names(ddsRes$log2FoldChange[i]))
}
}
return(vec)
}
ppat_gameto_up <- gametoUpreg(ppat_LFC)
View(ppat_LFC)
res_sigs<-subset(ppat_LFC, padj < 0.05)
View(res_sigs)
as.data.frame(res_sigs)
head(as.data.frame(res_sigs))
gametoUpreg <- function(ddsRes) {
ddsRes <-subset(ppat_LFC, padj < 0.05)
ddsRes1 <- as.data.frame(ddsRes)
vec <- ddsRes1 %>% filter(log2FoldChange >= 2)
# vec <- c()
# for (i in  1:length(ddsRes$log2FoldChange)) {
#   if (ddsRes$log2FoldChange[i] >= 2 & is.na(ddsRes$log2FoldChange[i])==FALSE & is.na(ddsRes$padj[i])==FALSE & ddsRes$padj[i] < 0.05) {
#     vec <- append(vec, names(ddsRes$log2FoldChange[i]))
#   }
# }
return(vec)
}
ppat_gameto_up <- gametoUpreg(ppat_LFC)
library(dplyr)
gametoUpreg <- function(ddsRes) {
ddsRes <-subset(ppat_LFC, padj < 0.05)
ddsRes1 <- as.data.frame(ddsRes)
vec <- ddsRes1 %>% filter(log2FoldChange >= 2)
# vec <- c()
# for (i in  1:length(ddsRes$log2FoldChange)) {
#   if (ddsRes$log2FoldChange[i] >= 2 & is.na(ddsRes$log2FoldChange[i])==FALSE & is.na(ddsRes$padj[i])==FALSE & ddsRes$padj[i] < 0.05) {
#     vec <- append(vec, names(ddsRes$log2FoldChange[i]))
#   }
# }
return(vec)
}
ppat_gameto_up <- gametoUpreg(ppat_LFC)
View(ppat_gameto_up)
gametoUpreg <- function(ddsRes) {
ddsRes <-subset(ppat_LFC, padj < 0.05)
ddsRes1 <- as.data.frame(ddsRes)
vec <- ddsRes1 %>% filter(log2FoldChange >= 2)
vec1 <- rownames(vec)
# vec <- c()
# for (i in  1:length(ddsRes$log2FoldChange)) {
#   if (ddsRes$log2FoldChange[i] >= 2 & is.na(ddsRes$log2FoldChange[i])==FALSE & is.na(ddsRes$padj[i])==FALSE & ddsRes$padj[i] < 0.05) {
#     vec <- append(vec, names(ddsRes$log2FoldChange[i]))
#   }
# }
return(vec1)
}
ppat_gameto_up <- gametoUpreg(ppat_LFC)
source("~/Desktop/Dludoviciana/DESeq/deseq.R", echo=TRUE)
gametoDownreg <- function(ddsRes) {
ddsRes <-subset(ppat_LFC, padj < 0.05)
ddsRes1 <- as.data.frame(ddsRes)
vec <- ddsRes1 %>% filter(log2FoldChange <= -2)
vec1 <- rownames(vec)
# vec <- c()
# for (i in  1:length(ddsRes$log2FoldChange)) {
#   if (ddsRes$log2FoldChange[i] <= -2 & is.na(ddsRes$log2FoldChange[i])==FALSE & is.na(ddsRes$padj[i])==FALSE & ddsRes$padj[i] < 0.05) {
#     vec <- append(vec, names(ddsRes$log2FoldChange[i]))
#   }
# }
return(vec)
}
ppat_gameto_down <- gametoDownreg(ppat_LFC)
gametoDownreg <- function(ddsRes) {
ddsRes <-subset(ppat_LFC, padj < 0.05)
ddsRes1 <- as.data.frame(ddsRes)
vec <- ddsRes1 %>% filter(log2FoldChange <= -2)
vec1 <- rownames(vec)
# vec <- c()
# for (i in  1:length(ddsRes$log2FoldChange)) {
#   if (ddsRes$log2FoldChange[i] <= -2 & is.na(ddsRes$log2FoldChange[i])==FALSE & is.na(ddsRes$padj[i])==FALSE & ddsRes$padj[i] < 0.05) {
#     vec <- append(vec, names(ddsRes$log2FoldChange[i]))
#   }
# }
return(vec1)
}
ppat_gameto_down <- gametoDownreg(ppat_LFC)
