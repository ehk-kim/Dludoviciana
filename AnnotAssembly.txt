# Analysis of gametophyte and sporophyte gene expression

## 1. Download sequence data

Download the sequence data for all species using [this table](link to github table). Each species should have a directory of its own.

```
fasterq-dump SRRXXXXXXX --split-files
```
Some samples may begin with ERR instead of SRR. However, all samples in this example will be referred with "SRRXXXXXXX".

## 2. Quality check and trimming

Check the quality of the reads using [FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/). Trim adapters and poor-quality reads using [Trimmomatic (v0.39)](http://www.usadellab.org/cms/index.php?page=trimmomatic). Note that UFRC provides a wrapper script for Trimmomatic.

```
fastqc *.fastq

# For single-end reads, use this command. Ensure that TruSeq2-SE.fa & TruSeq3-SE.fa are in your working directory.
trimmomatic SE SRRXXXXXXX.fastq SRRXXXXXXX_trimmed.fastq ILLUMINACLIP:TruSeq2-SE.fa:2:30:10 ILLUMINACLIP:TruSeq3-SE.fa:2:30:10 SLIDINGWINDOW:10:30 HEADCROP:10 

# For paired-end reads, use this command. Ensure that TruSeq2-PE.fa & TruSeq3-PE.fa are in your working directory.
trimmomatic PE SRRXXXXXXX_1.fastq SRRXXXXXXX_2.fastq SRRXXXXXXX_1P.fastq SRRXXXXXXX_1U.fastq SRRXXXXXXX_2P.fastq SRRXXXXXXX_2U.fastq ILLUMINACLIP:TruSeq2-PE.fa:2:30:10 ILLUMINACLIP:TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:10:30 HEADCROP:10
```

## 2.5. *De novo* assembly

For transcriptomic data, a reference transcriptome must be created before alignment and mapping. Use [Trinity](https://github.com/trinityrnaseq/trinityrnaseq/wiki) to assemble a reference.

Note that all .fastq files must be included in the Trinity command. In this example, samples are differentiated with the last number.

```
Trinity --seqType fq --left SRRXXXXXX0_1P.fastq,SRRXXXXXX1_1P.fastq --right SRRXXXXXX0_2P.fastq,SRRXXXXXX1_2P.fastq --CPU 6 --max_memory 20G --output trinity_out
```

Identify candidate coding regions using [Transdecoder (v5.5.0)](http://transdecoder.sourceforge.net/).
```
cd /trinity_out

TransDecoder.LongOrfs -t Trinity.fasta
TransDecoder.Predict -t Trinity.fasta
```

## 3. Annotation

For samples without annotations, use [Trinotate](https://trinotate.github.io/) to obtain annotation files.

```
prot_db="/blue/data/reference/trinotate/v4/uniprot_sprot.pep"

blastx -query sample.cds -db $prot_db -num_threads 8 -max_target_seqs 1 -outfmt 6 > sample_nt.blast
blastp -query sample.pep -db $prot_db -num_threads 8 -max_target_seqs 1 -outfmt 6 > sample_pep.blast

hmmr_db="/blue/data/reference/trinotate/v4/Pfam-A.hmm"

hmmscan --cpu 8 --domtblout sample_TrinotatePFAM.out $hmmr_db sample_Bonn.pep > sample_pfam.log

signalp -f short -n sample_signalp.out sample.pep

Trinotate Trinotate_v3.sqlite init --gene_trans_map sample_gene_trans_map --transcript_fasta sample.fasta --transdecoder_pep sample.pep

Trinotate Trinotate_v3.sqlite LOAD_swissprot_blastp sample_pep.blast
Trinotate Trinotate_v3.sqlite LOAD_swissprot_blastx sample_nt.blast
Trinotate Trinotate_v3.sqlite LOAD_pfam sample_TrinotatePFAM.out
Trinotate Trinotate_v3.sqlite LOAD_signalp sample_signalp.out
Trinotate Trinotate_v3.sqlite report > sample_annotation_report.xls

extract_GO_assignments_from_Trinotate_xls.pl --Trinotate_xls sample_annotation_report.xls -G > go_annotations.txt
```

## 4. Alignment/mapping

Species with transcriptome data were mapped using [Bowtie2](https://bowtie-bio.sourceforge.net/bowtie2/index.shtml), while species with genomes were mapped using [HISAT2](http://daehwankimlab.github.io/hisat2/).

```
# Bowtie2
bowtie2-build sample.fasta Sample
bowtie2 -x Sample -1 SRRXXXXXXX_1P.fastq -2 SRRXXXXXXX_2P.fastq -S SRRXXXXXXX.sam

# HISAT2
hisat2-build -f sample.fa Sample
hisat2 -p 16 -x Sample -U SRRXXXXXXX_trimmed.fastq -S SRRXXXXXXX.sam
```

## 4.5. Converting files

All sam files must be converted into sorted bam files using [SAMtools](http://www.htslib.org/).

```
samtools view -bS SRRXXXXXXX.sam > SRRXXXXXXX.bam
samtools sort -@ 8 -n -o SRRXXXXXXX_sorted.bam SRRXXXXXXX.bam
```

## 5. Counts files

Obtain counts files using [HTSeq](https://htseq.readthedocs.io/en/latest/).

```
htseq-count -f bam -m intersection-nonempty -s no -t gene -i ID -o SRRXXXXXXX_counts SRRXXXXXXX_sorted.bam sample.gff > SRRXXXXXXX_gene_summary
```
